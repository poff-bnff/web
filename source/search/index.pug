extends /_templates/layout.pug
include /_templates/mixins.pug

block content
    br
    br
    br
    br
    br
    br
    br
    br
    input#search(type='text', placeholder='Search something now!!!')
    //- select#festivalsSelect(name='festivals')
    //- select#programmesSelect(name='festivalProgrammes')


    select#programmesSelect(name='Programmes')
        -
            const programmes_sort = Object.fromEntries(
                Object.entries(self.data.filters.programme).sort(function([,a],[,b]){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') PROGRAMMID:
        each index, key in programmes_sort
            option(value=key)= index

    select#languagesSelect(name='Languages')
        -
            const languages_sort = Object.fromEntries(
                Object.entries(self.data.filters.language).sort(function([,a],[,b]){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') KEEL:
        each index, key in languages_sort
            option(value=key)= index

    select#countriesSelect(name='Countries')
        -
            const countries_sort = Object.fromEntries(
                Object.entries(self.data.filters.country).sort(function([,a],[,b]){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') RIIK:
        each index, key in countries_sort
            option(value=key)= index

    select#subtitlesSelect(name='Subtitles')
        -
            const subtitles_sort = Object.fromEntries(
                Object.entries(self.data.filters.subtitle).sort(function([,a],[,b]){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') SUBTIITRID:
        each index, key in subtitles_sort
            option(value=key)= index

    select#premieretypesSelect(name='Premieretypes')
        -
            const premieretypes_sort = Object.fromEntries(
                Object.entries(self.data.filters.premieretype).sort(function([,a],[,b]){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') ESILINASTUSED:
        each index, key in premieretypes_sort
            option(value=key)= index

    select#townsSelect(name='Towns')
        -
            const towns_sort = Object.fromEntries(
                Object.entries(self.data.filters.town).sort(function([,a],[,b]){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') LINNAD:
        each index, key in towns_sort
            option(value=key)= index

    select#cinemasSelect(name='Cinemas')
        -
            const cinemas_sort = Object.fromEntries(
                Object.entries(self.data.filters.cinema).sort(function(a,b){ return ('' + a).localeCompare(b, self.locale); })
            );
        option(value='') KINOD:
        each index, key in cinemas_sort
            option(value=key)= index

    button(onclick='unselect_all()') X

    h3#nonetoshow.sub_section_headline(style='display: none;') POLE VALIKULE VASTAVAT KUVADA

    - var allFestivalEditions = []
    - var allProgrammes = []
    - var allFestivals = []

    if self.data.cassettes
        main.grid_films
            - var cassettesArray = []
            each cassette in self.data.cassettes.sort(function(a, b){ if(a.title && b.title) { return ('' + a.title).localeCompare(b.title, self.locale); } else { return 0; } })
                - var oneCassette = []
                if cassette.festival_editions
                    each edition in cassette.festival_editions
                        - allFestivalEditions.push(edition.name)
                if cassette.festivals
                    - var festivalsCassette = []
                    each festival in cassette.festivals
                        - allFestivals.push(festival.name)
                        - festivalsCassette.push(festival.name)
                a.card_film(id=cassette.id href=`/${lang_path}film/${cassette.slug}`)
                    input#festivalsCassette(type='hidden', value=`${festivalsCassette}`)

                    .container_frame_16_9
                        //- each media in cassette.media
                            //- - console.log(cassette.media)
                            if cassette.media['posters']
                                //- -console.log(cassette.media['posters'][0]['name'])
                            //-     if self.data.pictures.filmslugs[cassette.path].posters
                            //-         img.container_contents_16_9(src=`https://assets.poff.ee/img/${self.data.pictures.filmslugs[cassette.path].poster}` alt = film[`filmTitle_${self.locale}`])
                            //-     else
                            //-         img.container_contents_16_9(src='/assets/img/global/placeholder_hd_1.jpg' alt = film[`filmTitle_${self.locale}`])
                            //- else
                            //-     img.container_contents_16_9(src='/assets/img/global/placeholder_hd_1.jpg' alt = film[`filmTitle_${self.locale}`])


                        if cassette.films && cassette.films.length > 1
                            if cassette.cassetteCarouselPicsCassette && cassette.cassetteCarouselPicsCassette[0]
                                img.container_contents_16_9(src= cassette.cassetteCarouselPicsCassette[0] alt= cassette.title)
                            else if cassette.cassetteCarouselPicsFilms && cassette.cassetteCarouselPicsFilms[0]
                                img.container_contents_16_9(src= cassette.cassetteCarouselPicsFilms[0] alt= cassette.title)
                        else if cassette.films && cassette.films.length === 1 && cassette.cassetteCarouselPicsFilms
                            img.container_contents_16_9(src= cassette.cassetteCarouselPicsFilms[0] alt= cassette.title)
                        else
                            img.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt= cassette.title)
                    .card_film_title
                        h3#title.film_title_locale.dark_1= cassette.title
                        - oneCassette.push(cassette.title)
                        - cassettesArray.push(oneCassette)

                    .card_film_info
                        .str_info_grid_3
                            if cassette.films && cassette.films.length
                                - var filmsProgrammes = []
                                each film in cassette.films
                                    if film.tags && film.tags.programmes && film.tags.programmes.length
                                        each programme in film.tags.programmes
                                            if programme.name
                                                - filmsProgrammes.push(programme.name)
                                                - allProgrammes.push(programme.name)
                                if filmsProgrammes.length
                                    - var uniqueProgrammes = [...new Set(filmsProgrammes)];
                                    .str_info_label.dark_semi= self.label.film.programme
                                    #programmes.str_info_value.dark_1.thin_300= uniqueProgrammes.join(', ')
                        //- if cassette.credentials.director
                        //-     .str_info_grid_3
                        //-         .str_info_label= self.label.cassette.director
                        //-         .str_info_value= cassette.credentials.director.join(', ')
                        //- if cassette.credentials.cast
                        //-     .str_info_grid_3
                        //-         .str_info_label= self.label.cassette.cast
                        //-         .str_info_value= cassette.credentials.cast.join(', ')
            script.
                var searcharray = !{JSON.stringify(self.data.search)}

                var filters = !{JSON.stringify(self.data.filters)}


    - var uniqueFestivalEditions = [...new Set(allFestivalEditions)]
            //- - console.log(uniqueFestivalEditions)
    - var uniqueFestivals = [...new Set(allFestivals)]
    - var uniqueProgrammes = [...new Set(allProgrammes)]

    input#festivals(type='hidden', value=`${uniqueFestivals}`)
    input#festivalEditions(type='hidden', value=`${uniqueFestivalEditions}`)
    input#festivalProgrammes(type='hidden', value=`${uniqueProgrammes}`)


