
main.grid_film
    //- Kasseti title ja synopsis
    //- div
    //-     if self.title
    //-         h1.dark_1= 'ÜHEFILMIKASSETT!!!!!!!!!!!!!!!!!! ' + self.title
    //-     if self.synopsis
    //-         h1.dark_1= self.synopsis

    //- KARUSELL filmi piltidega
    section#carouselExampleIndicators.f_img_slider_box.carousel.slide(data-ride='carousel' data-interval='6000')
        ol.carousel-indicators
            if self.films && self.films[0].media
                if self.films[0].media.stills && self.films[0].media.stills[0]
                    each val, index in self.films[0].media.stills
                        li(data-target='#carouselExampleIndicators' data-slide-to = index)
        .carousel-inner.container_frame_16_9
            if self.films && self.films[0] && self.films[0].media
                if self.films[0].media.stills && self.films[0].media.stills.length
                    each val, index in self.films[0].media.stills
                        if index == 0
                            .carousel-item.active.container_contents_16_9
                                img.d-block.container_contents_16_9(src=`https://assets.poff.ee/img/${val.hash}${val.ext}` alt = self.title)
                        else
                            .carousel-item.container_contents_16_9
                                img.d-block.container_contents_16_9(src=`https://assets.poff.ee/img/${val.hash}${val.ext}` alt = self.title)
                else
                    .carousel-item.active.container_contents_16_9
                        img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)
            else
                .carousel-item.active.container_contents_16_9
                    img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)

        a.carousel-control-prev(href='#carouselExampleIndicators' role='button' data-slide='prev')
            // <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                polyline(points='15 18 9 12 15 6')
            span.sr-only Previous
        a.carousel-control-next(href='#carouselExampleIndicators' role='button' data-slide='next')
            // <span class="carousel-control-next-icon" aria-hidden="true"></span>
            svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                polyline(points='9 18 15 12 9 6')
            span.sr-only Next
    //- LÕPP! KARUSELL filmi piltidega LÕPP


    //- Algab kasseti filmide info kuvamine
    if self.films
        each film in self.films

            - var pathParts = self.path.split('/')
            - var filmPath = pathParts[pathParts.length - 1]
            section.f_title_box

                .premiere_type &nbsp;
                    if film.tags && film.tags.premiere_types && film.tags.premiere_types[0]
                        //- Kui on mitu, eraldatakse komadega, kui vaid esimest ühte vaja, siis film.tags.premiere_types[0]
                        p.premiere_type= film.tags.premiere_types.join(', ')

                h1.film_title_detailed= film.title
                .str_info_blokk_1

                    each p, locale in self.otherLocalePaths
                        if self[`title_${locale}`]
                            .str_info_grid_3
                                .str_info_label= self.label.film[`title_${locale}`]
                                .str_info_value= film[`title_${locale}`]

                    if film.titleOriginal
                        .str_info_grid_3
                            .str_info_label= self.label.film.titleOriginal
                            .str_info_value= film.titleOriginal

                    if film.credentials && film.credentials.rolePersonsByRole && film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                        .str_info_grid_3
                            .str_info_label= self.label.film.director
                            .str_info_value.clr_primary= film.credentials.rolePersonsByRole.director.join(', ')

                    if film.countries
                        - var countriesNames = function(item) {
                        -   if(item.name) {
                        -       var itemNames = item.name
                        -       return itemNames
                        -   }
                        - }

                        .str_info_grid_3
                            .str_info_label= self.label.film.countries
                            .str_info_value= film.countries.map(countriesNames).join(', ')

                    if film.year
                        .str_info_grid_3
                            .str_info_label= self.label.film.year
                            .str_info_value= film.year


            section.f_synopsis_box

                //- Kassetti festivali info
                .str_info_meta_gi
                    .str_info_meta_item
                        if film.tags

                            if film.tags.programmes && film.tags.programmes[0]
                                //- Festival editions
                                - var programmeNames = function(item) {
                                -   if(typeof item.name !== 'object') {
                                -       var itemNames = item.name
                                -   }
                                -   return itemNames
                                - }
                                - var festivalEditions = []
                                each programme in film.tags.programmes
                                    if programme.festival_editions && programme.festival_editions.length
                                            each festivalEdition in programme.festival_editions
                                                if festivalEdition.name
                                                    - festivalEditions.push(festivalEdition.name)
                                - var uniqueFestivalEditions = [...new Set(festivalEditions)]
                                if uniqueFestivalEditions != undefined && uniqueFestivalEditions.length > 0
                                    .str_info_meta_label.dark_semi= self.label.film.festival
                                    .str_info_meta_festival= uniqueFestivalEditions.join(', ')

                                //- Programmes
                                - var programmes = film.tags.programmes.map(programmeNames).join(', ')
                                if programmes !== undefined && programmes.length > 0
                                    .str_info_meta_label.dark_semi= self.label.film.programme
                                    .str_info_meta_festival= programmes



                            if film.tags.genres && film.tags.genres[0] && typeof film.tags.genres !== 'object'
                                .str_info_meta_label.dark_semi= self.label.film.genre
                                .str_info_meta_festival= film.tags.genres.join(', ')


                            if film.tags.keywords && film.tags.keywords[0] && typeof film.tags.keywords !== 'object'
                                .str_info_meta_label.dark_semi= self.label.film.keywords
                                .str_info_meta_festival= film.tags.keywords.join(', ')

                        //- festival programm zanrid keywordid


                    //- .str_info_meta_item
                    //-     .str_info_meta_label
                    //-         | Programm
                    //-     .str_info_meta_program
                    //-         | Foorum, Põhjusega mässajad
                if typeof film.synopsis !== 'undefined'
                    - var synopsis_md = film.synopsis
                    .synopsis_gi
                        if typeof synopsis_md === 'string'
                            +format(synopsis_md)
            section.f_cred_box
                .str_info_blokk_cred

                    //- if film.media && film.media.stills && film.media.stills[0]
                    //-     each still in film.media.stills
                    //-         if still.hash && still.ext
                    //-             div(style="width:30%; height:10%; padding-bottom:20px; padding-top:20px;")
                    //-                 img(src=`https://assets.poff.ee/img/${film.dirSlug}/${still.hash}${still.ext}` alt = film.titles style="width:100%; height:100%;")
                    //- else
                    //-     div(style="width:30%; height:10%; padding-bottom:20px; padding-top:20px;")
                    //-         img(src=`/assets/img/static/placeholder_hd_1.jpg` alt = film.titles style="width:100%; height:100%;")

                    //- NB!
                    //- NB!
                    //- NB!
                    //- NB! Credentials võetakse strapis oleva roleNamePrivate järgi väiketähtedes ja tühikuteta
                    //-     Näiteks: "Composer" all olevad isikud saab kätte film.credentials.rolePersonsByRole.composer.join(', ')
                    //-     Näiteks: Director Of Photography film.credentials.rolePersonsByRole.directorofphotography

                    if film && film.credentials && film.credentials.rolePersonsByRole
                        if film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.director
                                .str_info_value= film.credentials.rolePersonsByRole.director.join(', ')

                        if film.credentials.rolePersonsByRole.screenwriter && film.credentials.rolePersonsByRole.screenwriter[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.screenwriter
                                .str_info_value= film.credentials.rolePersonsByRole.screenwriter.join(', ')

                        if film.credentials.rolePersonsByRole.cast && film.credentials.rolePersonsByRole.cast[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.cast
                                .str_info_value= film.credentials.rolePersonsByRole.cast.join(', ')

                        if film.credentials.rolePersonsByRole.producer && film.credentials.rolePersonsByRole.producer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.producer
                                .str_info_value= film.credentials.rolePersonsByRole.producer.join(', ')

                        if film.credentials.rolePersonsByRole.directorofphotography && film.credentials.rolePersonsByRole.directorofphotography[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.doP
                                .str_info_value= film.credentials.rolePersonsByRole.directorofphotography.join(', ')

                        if film.credentials.rolePersonsByRole.composer && film.credentials.rolePersonsByRole.composer[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.composer
                                .str_info_value= film.credentials.rolePersonsByRole.composer.join(', ')

                        if film.credentials.rolePersonsByRole.editor && film.credentials.rolePersonsByRole.editor[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.editor
                                .str_info_value= film.credentials.rolePersonsByRole.editor.join(', ')

                        //- Below datamodel needs to be updated and then code amended to be correct
                        if film.credentials.rolePersonsByRole.productionCompany && film.credentials.rolePersonsByRole.productionCompany[0]
                            .str_info_grid_3
                                .str_info_label= self.label.film.production
                                .str_info_value= film.credentials.rolePersonsByRole.productionCompany.join(', ')

            section.f_runtime_box

                if film.runtime
                    .str_info_grid_3
                        .str_info_label= self.label.film.runtime
                        .str_info_value
                            +dur(film.runtime)

                if film.languages
                    - var languagesNames = function(item) {
                    -   if(item.name) {
                    -       var itemNames = item.name
                    -       return itemNames
                    -   }
                    - }
                    .str_info_grid_3
                        .str_info_label= self.label.film.languages
                        .str_info_value= film.languages.map(languagesNames).join(', ')

            //- section.f_interactive_box
            //-     .f_interactive_item
            //-         p
            //-             | Kas oled filmi juba näinud? Osale publiku lemmikfilmi hääletuses.
            //-         a.btn.btn_vote.active(href='https://forms.gle/ew2vrQRTEb83BNxR7' role='button' target='_BLANK')= self.label.button.filmAudienceVote

            if film.credentials && film.credentials.rolePerson && film.credentials.rolePerson[0]
                - var sortCredentialsByOrder = film.credentials.rolePerson.sort(function(a, b){return a.role_at_film.order-b.role_at_film.order})
                - var director = sortCredentialsByOrder.filter( (a) => { return 'Director' === a.role_at_film.roleNamePrivate })[0]

            if typeof director !== 'undefined' && director.person && director.person.firstName && director.person.lastName
                section.f_dir_bio_box

                    if director.person.picture
                        .dir_img
                            img.img_dir(src=`/assets/img/dynamic/img_persons/${director.person.picture.hash}${director.person.picture.ext}` alt = film.titles)
                            .str_info_grid_3
                                .str_info_label.text_left.dark_semi= self.label.film.director
                                .str_info_value.text_right.dark_1= `${director.person.firstName} ${director.person.lastName}`

                    .dir_bio.dark_1
                        if director.person.biography && typeof director.person.biography !== 'object'
                            p.dark_1= director.person.biography
                        if director.person.filmography && typeof director.person.filmography !== 'object'
                            p.dark_1= director.person.filmography

            if film.presentedBy && film.presentedBy.presentedByText && film.presentedBy.organisations && film.presentedBy.organisations[0]

                section.f_extra_box
                    each presenter in film.presentedBy.organisations
                        p.dark_1= presenter.name

                        .supporter_logo_item_container
                            - var logoImg = ''
                            if presenter.logoColour
                                - logoImg = `/assets/img/dynamic/img_org/${presenter.logoColour.hash}${presenter.logoColour.ext}`
                            else if presenter.logoBlack
                                - logoImg = `/assets/img/dynamic/img_org/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`
                            else if presenter.logoWhite
                                - logoImg = `/assets/img/dynamic/img_org/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`

                            if presenter.homepageUrl
                                a(href= presenter.homepageUrl).supporter_logo_item_container
                                    img.supporter_logo_item(alt=presenter.name data-src= logoImg src= logoImg)
                            else
                                img.supporter_logo_item(alt=presenter.name data-src= logoImg src= logoImg)

            section.f_screenings_box
                div
                    h1.section_headline= self.label.film.screenings

                .card-deck.m-o.p-0
                    if self.screenings && self.screenings[0]
                        - var sortedScreenings = self.screenings.sort(function(a, b){return new Date(a.dateTime)-new Date(b.dateTime)})
                        each screening in sortedScreenings
                            .card.card_screening.rounded-0.border-0
                                .card-header.rounded-0.bg_dark_4
                                    .grid_container_screening_time
                                        div
                                            svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                rect(x='3' y='4' width='18' height='18' rx='2' ry='2')
                                                line(x1='16' y1='2' x2='16' y2='6')
                                                line(x1='8' y1='2' x2='8' y2='6')
                                                line(x1='3' y1='10' x2='21' y2='10')
                                            span.screening_date
                                                if screening.dateTime
                                                    +screeningDate(screening.dateTime)

                                        .text-right
                                            svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                circle(cx='12' cy='12' r='10')
                                                polyline(points='12 6 12 12 16 14')
                                            span.screening_time
                                                +screeningTime(screening.dateTime)

                                    .container_screening_location
                                        svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                            path(d='M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z')
                                            circle(cx='12' cy='10' r='3')

                                        if screening.location && screening.location.hall && screening.location.hall.name
                                            if screening.location.hall && screening.location.hall.name
                                                span.screening_hall= screening.location.hall.name
                                                if screening.location.hall.cinema && screening.location.hall.cinema.name
                                                    span.screening_venue= ` ${screening.location.hall.cinema.name}`
                                                    if screening.location.hall.cinema.town && screening.location.hall.cinema.town.name && screening.location.hall.cinema.town.country && screening.location.hall.cinema.town.country.name
                                                        span.city= ` ${screening.location.hall.cinema.town.name}`
                                                        //- span.city= ` ${screening.location.hall.cinema.town.name}, ${screening.location.hall.cinema.town.country.name}`

                                            //- See on privateName tegelikult: Coca-Cola Plaza, iSense saal
                                            //- if screening.location.name
                                            //-     h1= screening.location.name


                                .card-body.bg_dark_3
                                    .screening_info_blokk
                                        if film.title
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.Name
                                                span.screening_info_value= screening.codeAndTitle
                                        //- if screening.screeningSubtitles

                                        if film.subtitles
                                            - var subtitlesNames = function(item) {
                                            -   if(item.name) {
                                            -       var itemNames = item.name
                                            -       return itemNames
                                            -   }
                                            - }
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.Subtitles
                                                span.screening_info_value= film.subtitles.map(subtitlesNames).join(', ')
                                        if screening.screeningIntroGuests
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.screeningIntroGuests
                                                span.screening_info_value= screening.screeningIntroGuests
                                        if screening.screeningIntroPresenter
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.screeningIntroPresenter
                                                span.screening_info_value= screening.screeningIntroPresenter
                                        if screening.screeningQaGuests
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.screeningQaGuests
                                                span.screening_info_value= screening.screeningQaGuests
                                        if screening.screeningQaPresenter
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.screeningQaPresenter
                                                span.screening_info_value= screening.screeningQaPresenter

                                        if screening.durationTotal
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.TotalDuration
                                                span.screening_info_value
                                                    +dur(screening.durationTotal)

                                .btn-group(role='group' aria-label='')


                                    if screening.bookingUrl
                                        a.btn.btn_secondary.active(href= screening.bookingUrl role='button' target='_blank')= self.label.button.screeningReservation
                                    if screening.ticketingUrl && screening.ticketingId
                                        a.btn.btn_primary.active(href= `${screening.ticketingUrl}/${screening.ticketingId}` role='button' target='_blank')= self.label.button.screeningBuyTicket
                                    //- if screening.screeningTown === 'Tartu'
                                    //-     a.btn.btn_covid.active(href='https://forms.gle/UU4sFENoWyZ3PjSF8' role='button' target='_BLANK')= self.label.button.covidRegister
                                    //-     a.btn.btn_primary.active( role='button')= self.label.button.screeningFree



            //- if film.filmQaClip

            //-     section.f_qaclip_box
            //-         .section_headline= self.label.film.qaClip
            //-         .embed-responsive.embed-responsive-16by9.m-0.p-0
            //-             - youtubeVideoCode = film.filmQaClip.split("=")
            //-             +youtube(youtubeVideoCode[1])

            if film.media && film.media.trailer && film.media.trailer[0] && film.media.trailer[0].youTubeCode
                section.f_trailer_box
                    .section_headline= self.label.film.trailer
                        each trailer in film.media.trailer
                            .embed-responsive.embed-responsive-16by9.m-0.p-0
                                if trailer.youTubeCode && trailer.youTubeCode.length === 11
                                    +youtube(trailer.youTubeCode)

            //- section.f_imgs_box

            +tabname(self.title)
