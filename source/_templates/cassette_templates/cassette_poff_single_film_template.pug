
main.grid_film
    //- Kasseti title ja synopsis
    //- div
    //-     if self.title
    //-         h1.dark_1= 'ÜHEFILMIKASSETT!!!!!!!!!!!!!!!!!! ' + self.title
    //-     if self.synopsis
    //-         h1.dark_1= self.synopsis

    //- KARUSELL cassette piltidega
    section#carouselExampleIndicators.f_img_slider_box.carousel.slide(data-ride='carousel' data-interval='6000')
        ol.carousel-indicators
            if self.films[0].media
                if self.films[0].media.stills && self.films[0].media.stills[0]
                    each val, index in self.films[0].media.stills
                        li(data-target='#carouselExampleIndicators' data-slide-to = index)
        .carousel-inner.container_frame_16_9
            if self.films[0].media
                if self.films[0].media.stills && self.films[0].media.stills.length
                    each val, index in self.films[0].media.stills
                        if index == 0
                            .carousel-item.active.container_contents_16_9
                                img.d-block.container_contents_16_9(src=`/assets/img/dynamic/img_films/${self.films[0].dirSlug}/${val.hash}${val.ext}` alt = self.title)
                        else
                            .carousel-item.container_contents_16_9
                                img.d-block.container_contents_16_9(src=`/assets/img/dynamic/img_films/${self.films[0].dirSlug}/${val.hash}${val.ext}` alt = self.title)
                else
                    .carousel-item.active.container_contents_16_9
                        img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)
            else
                .carousel-item.active.container_contents_16_9
                    img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = self.title)

        a.carousel-control-prev(href='#carouselExampleIndicators' role='button' data-slide='prev')
            // <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                polyline(points='15 18 9 12 15 6')
            span.sr-only Previous
        a.carousel-control-next(href='#carouselExampleIndicators' role='button' data-slide='next')
            // <span class="carousel-control-next-icon" aria-hidden="true"></span>
            svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                polyline(points='9 18 15 12 9 6')
            span.sr-only Next
    //- LÕPP! KARUSELL cassette piltidega LÕPP


    //- Algab kasseti filmide info kuvamine
    each film in self.films
        block titleBox
        section.f_synopsis_box

            //- Kassetti festivali info
            if self.festival_edition && self.festival_edition.festival && self.festival_edition.festival.name
            .str_info_meta_gi
                .str_info_meta_item
                    .str_info_meta_label.dark_1= self.label.film.festival
                    .str_info_meta_festival= self.festival_edition.festival.name


                    if self.festival_edition && self.festival_edition && self.festival_edition.name
                        //- Kas selleks eraldi labelit vaja vms?
                        .str_info_meta_label.dark_1= self.label.film.festival
                        .str_info_meta_festival= self.festival_edition.name

                    if film.tags && film.tags.programmes && film.tags.programmes[0]
                        - var programmeNames = function(item) {
                        -   var itemNames = item.name
                        -   return itemNames
                        - }
                        .str_info_meta_label.dark_1= self.label.film.programme
                        .str_info_meta_festival= film.tags.programmes.map(programmeNames).join(', ')

                    if film.tags && film.tags.genres && film.tags.genres[0]
                        .str_info_meta_label.dark_1= self.label.film.genre
                        .str_info_meta_festival= film.tags.genres.join(', ')


                    if film.tags && film.tags.keywords && film.tags.keywords[0]
                        .str_info_meta_label.dark_1= self.label.film.keywords
                        .str_info_meta_festival= film.tags.keywords.join(', ')

                    //- festival programm zanrid keywordid


                //- .str_info_meta_item
                //-     .str_info_meta_label
                //-         | Programm
                //-     .str_info_meta_program
                //-         | Foorum, Põhjusega mässajad
            if typeof film.synopsis !== 'undefined'
                - var synopsis_md = film.synopsis
                .synopsis_gi
                    +format(synopsis_md)
        section.f_cred_box
            .str_info_blokk_cred

                //- if film.media && film.media.stills && film.media.stills[0]
                //-     each still in film.media.stills
                //-         if still.hash && still.ext
                //-             div(style="width:30%; height:10%; padding-bottom:20px; padding-top:20px;")
                //-                 img(src=`/assets/img/dynamic/img_films/${film.dirSlug}/${still.hash}${still.ext}` alt = film.titles style="width:100%; height:100%;")
                //- else
                //-     div(style="width:30%; height:10%; padding-bottom:20px; padding-top:20px;")
                //-         img(src=`/assets/img/static/placeholder_hd_1.jpg` alt = film.titles style="width:100%; height:100%;")

                //- NB!
                //- NB!
                //- NB!
                //- NB! Credentials võetakse strapis oleva roleNamePrivate järgi väiketähtedes
                //-     Näiteks: "Composer" all olevad isikud saab kätte film.credentials.rolePersonsByRole.composer.join(', ')

                if film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.director
                        .str_info_value= film.credentials.rolePersonsByRole.director.join(', ')

                if film.credentials.rolePersonsByRole.screenwriter && film.credentials.rolePersonsByRole.screenwriter[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.screenwriter
                        .str_info_value= film.credentials.rolePersonsByRole.screenwriter.join(', ')

                if film.credentials.rolePersonsByRole.cast && film.credentials.rolePersonsByRole.cast[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.cast
                        .str_info_value= film.credentials.rolePersonsByRole.cast.join(', ')

                if film.credentials.rolePersonsByRole.producer && film.credentials.rolePersonsByRole.producer[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.producer
                        .str_info_value= film.credentials.rolePersonsByRole.producer.join(', ')

                if film.credentials.rolePersonsByRole.dop && film.credentials.rolePersonsByRole.dop[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.doP
                        .str_info_value= film.credentials.rolePersonsByRole.dop.join(', ')

                if film.credentials.rolePersonsByRole.composer && film.credentials.rolePersonsByRole.composer[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.composer
                        .str_info_value= film.credentials.rolePersonsByRole.composer.join(', ')

                if film.credentials.rolePersonsByRole.editor && film.credentials.rolePersonsByRole.editor[0]
                    .str_info_grid_3
                        .str_info_label= self.label.film.editor
                        .str_info_value= film.credentials.rolePersonsByRole.editor.join(', ')

                //- Below datamodel needs to be updated and then code amended to be correct
                if film.credentials.productionCompany
                    .str_info_grid_3
                        .str_info_label= self.label.film.production
                        .str_info_value= film.ProductionCompanyCSV
        section.f_runtime_box
            if film.countriesAndLanguages.languages
                - var languagesNames = function(item) {
                -   var itemNames = item.name
                -   return itemNames
                - }
                .str_info_grid_3
                    .str_info_label= self.label.film.languages
                    .str_info_value= film.countriesAndLanguages.languages.map(languagesNames).join(', ')

            if film.runtime
                .str_info_grid_3
                    .str_info_label= self.label.film.runtime
                    .str_info_value
                        +dur(film.runtime)
        section.f_interactive_box
            .f_interactive_item
                p
                    | Kas oled filmi juba näinud? Osale publiku lemmikfilmi hääletuses.
                a.btn.btn_vote.active(href='https://forms.gle/ew2vrQRTEb83BNxR7' role='button' target='_BLANK')= self.label.button.filmAudienceVote

        if film.credentials && film.credentials.rolePerson[0]
            - var sortCredentialsByOrder = film.credentials.rolePerson.sort(function(a, b){return a.role_at_film.order-b.role_at_film.order})
            - var director = sortCredentialsByOrder.filter( (a) => { return 'Director' === a.role_at_film.roleNamePrivate })[0]

        if typeof director !== 'undefined' && director.person && director.person.firstName && director.person.lastName
            section.f_dir_bio_box
                if director.person.picture
                    .dir_img
                        img.img_dir(src=`/assets/img/dynamic/img_persons/${director.person.picture.hash}${director.person.picture.ext}` alt = film.titles)
                        .str_info_grid_3
                            .str_info_label.text_left= self.label.film.director
                            .str_info_value.text_right= `${director.person.firstName} ${director.person.lastName}`

                //- p= `${director.person.firstName} ${director.person.lastName}`

                    //- if director.person.biography || director.person.filmography
                .dir_bio
                    if director.person.biography
                        p= director.person.biography
                    if director.person.filmography
                        p= director.person.filmography

        if film.presentedBy && film.presentedBy.presentedByText && film.presentedBy.organisations && film.presentedBy.organisations[0]

            section.f_extra_box
                p= film.presentedBy.presentedByText
                each presenter in film.presentedBy.organisations
                    p.dark_1= presenter.name

                    .supporter_logo_item_container
                        if presenter.homepageUrl
                            a(href= presenter.homepageUrl).supporter_logo_item_container
                                if presenter.logoColour
                                    img.supporter_logo_item(alt=presenter.name data-src=`/assets/img/dynamic/img_supporters/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`/assets/img/dynamic/img_supporters/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                else if presenter.logoBlack
                                    img.supporter_logo_item(alt=presenter.name data-src=`/assets/img/dynamic/img_supporters/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`/assets/img/dynamic/img_supporters/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                else if presenter.logoWhite
                                    img.supporter_logo_item(alt=presenter.name data-src=`/assets/img/dynamic/img_supporters/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`/assets/img/dynamic/img_supporters/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                        else
                            if presenter.logoColour
                                img.supporter_logo_item(alt=presenter.name data-src=`/assets/img/dynamic/img_supporters/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`/assets/img/dynamic/img_supporters/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                            else if presenter.logoBlack
                                img.supporter_logo_item(alt=presenter.name data-src=`/assets/img/dynamic/img_supporters/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`/assets/img/dynamic/img_supporters/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                            else if presenter.logoWhite
                                img.supporter_logo_item(alt=presenter.name data-src=`/assets/img/dynamic/img_supporters/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`/assets/img/dynamic/img_supporters/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)


        if film.filmQaClip

            section.f_qaclip_box
                .section_headline= self.label.film.qaClip
                .embed-responsive.embed-responsive-16by9.m-0.p-0
                    - youtubeVideoCode = film.filmQaClip.split("=")
                    +youtube(youtubeVideoCode[1])

        if film.media && film.media.trailer && film.media.trailer[0] && film.media.trailer[0].url

            section.f_trailer_box
                .section_headline= self.label.film.trailer
                .embed-responsive.embed-responsive-16by9.m-0.p-0
                    if film.media.trailer[0].source === 'YouTube'
                        - youtubeVideoCode = film.media.trailer[0].url.split("=")
                        +youtube(youtubeVideoCode[1])
                    else if film.media.trailer[0].source === 'Vimeo'

        section.f_imgs_box

        block film
