extends /_templates/layout.pug
include /_templates/mixins.pug

block content

    main.grid_film(id=self.id)

        each film in self.films

            //- KARUSELL filmi piltidega
            section#carouselExampleIndicators.f_img_slider_box.carousel.slide(data-ride='carousel' data-interval='6000')
                ol.carousel-indicators
                    if film.cassetteCarouselPicsFilms
                        each val, index in film.cassetteCarouselPicsFilms
                            li(data-target='#carouselExampleIndicators' data-slide-to = index)
                .carousel-inner.container_frame_16_9
                    if film.cassetteCarouselPicsFilms
                        each val, index in film.cassetteCarouselPicsFilms
                            if index == 0
                                .carousel-item.active.container_contents_16_9
                                    img.d-block.container_contents_16_9(src=val alt = film.titleBox.title)
                            else
                                .carousel-item.container_contents_16_9
                                    img.d-block.container_contents_16_9(src=val alt = film.titleBox.title)
                    else
                        .carousel-item.active.container_contents_16_9
                            img.d-block.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt = film.titleBox.title)


                a.carousel-control-prev(href='#carouselExampleIndicators' role='button' data-slide='prev')
                    // <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                        polyline(points='15 18 9 12 15 6')
                    span.sr-only Previous
                a.carousel-control-next(href='#carouselExampleIndicators' role='button' data-slide='next')
                    // <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    svg.svg_icon_prev_next(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                        polyline(points='9 18 15 12 9 6')
                    span.sr-only Next
                if film.media && film.media.trailer && film.media.trailer[0] && film.media.trailer[0].videoCode
                    a.play_link(href='#trailer')
                        svg.svg_icon_play(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='2' fill='white' stroke-linecap='round' stroke-linejoin='round')
                            polygon(points='5 3 19 12 5 21 5 3')
                            //- LÕPP! KARUSELL filmi piltidega LÕPP


                    //- Algab kasseti filmide info kuvamine


            section.f_title_box

                if film.premierTypes
                    .premiere_type
                        p.premiere_type= film.premierTypes.join(', ')

                h1.film_title_detailed= film.titleBox.title
                .str_info_blokk_1

                    each p, locale in self.otherLocalePaths
                        if film.titleBox[locale]
                            .str_info_grid_3
                                .str_info_label= self.label.film[`title_${locale}`]
                                .str_info_value= film.titleBox[locale]

                    if film.titleBox.original
                        .str_info_grid_3
                            .str_info_label= self.label.film.titleOriginal
                            .str_info_value= film.titleBox.original

                    if film.credentials.director
                        .str_info_grid_3
                            .str_info_label= self.label.film.director
                            .str_info_value.clr_primary= film.credentials.director.join(', ')
                    //- todo #383
                    if film.countryNames
                        .str_info_grid_3
                            .str_info_label= self.label.film.countries
                            .str_info_value= film.countryNames.join(', ')

                    if film.year
                        .str_info_grid_3
                            .str_info_label= self.label.film.year
                            .str_info_value= film.year


            section.f_synopsis_box

                //- Kassetti festivali info
                .str_info_meta_gi
                    .str_info_meta_item

                        //- Festival editions

                        if film.synopsisBox.festivalEditionNames
                            .str_info_meta_label.dark_semi= self.label.film.festival
                            .str_info_meta_festival= film.synopsisBox.festivalEditionNames.join(', ')

                        //- Programmes
                        if film.synopsisBox.programmeNames
                            .str_info_meta_label.dark_semi= self.label.film.programme
                            .str_info_meta_festival= film.synopsisBox.programmeNames

                        //- Genres
                        if film.synopsisBox.genres
                            .str_info_meta_label.dark_semi= self.label.film.genre
                            .str_info_meta_festival= film.synopsisBox.genres.join(', ')

                        //- Keywords
                        if film.synopsisBox.keywords
                            .str_info_meta_label.dark_semi= self.label.film.keywords
                            .str_info_meta_festival= film.synopsisBox.keywords.join(', ')

                        //- festival programm zanrid keywordid


                    //- .str_info_meta_item
                    //-     .str_info_meta_label
                    //-         | Programm
                    //-     .str_info_meta_program
                    //-         | Foorum, Põhjusega mässajad
                if film.synopsisBox.synopsis_md
                    - var synopsis_md = film.synopsisBox.synopsis_md
                    .synopsis_gi
                        if typeof synopsis_md === 'string'
                            +format(synopsis_md)

            section.f_cred_box
                .str_info_blokk_cred

                    if film.credentials
                        if film.credentials.director
                            .str_info_grid_3
                                .str_info_label= self.label.film.director
                                .str_info_value= film.credentials.director.join(', ')

                        if film.credentials.screenwriter
                            .str_info_grid_3
                                .str_info_label= self.label.film.screenwriter
                                .str_info_value= film.credentials.screenwriter.join(', ')

                        if film.credentials.cast
                            .str_info_grid_3
                                .str_info_label= self.label.film.cast
                                .str_info_value= film.credentials.cast.join(', ')

                        if film.credentials.producer
                            .str_info_grid_3
                                .str_info_label= self.label.film.producer
                                .str_info_value= film.credentials.producer.join(', ')

                        if film.credentials.directorofphotography
                            .str_info_grid_3
                                .str_info_label= self.label.film.doP
                                .str_info_value= film.credentials.directorofphotography.join(', ')

                        if film.credentials.composer
                            .str_info_grid_3
                                .str_info_label= self.label.film.composer
                                .str_info_value= film.credentials.composer.join(', ')

                        if film.credentials.editor
                            .str_info_grid_3
                                .str_info_label= self.label.film.editor
                                .str_info_value= film.credentials.editor.join(', ')

                        //- Below datamodel needs to be updated and then code amended to be correct
                        if film.credentials.productionCompany
                            .str_info_grid_3
                                .str_info_label= self.label.film.production
                                .str_info_value= film.credentials.productionCompany.join(', ')

            section.f_runtime_box

                if film.runtime
                    .str_info_grid_3
                        .str_info_label= self.label.film.runtime
                        .str_info_value
                            +dur(film.runtime)

                if film.languageNames
                    .str_info_grid_3
                        .str_info_label= self.label.film.languages
                        .str_info_value= film.languageNames.join(', ')

            section.f_interactive_box
                .f_interactive_item
                    p#loggedOutFavouriteStatus= self.label.film.shortlistHelp

                    a.btn.btn_primary.notshortlisted(id=self.id+'_not_shortlisted', style= {display: 'none'} onclick=`saveFilmAsFavourite(${self.id})` role='button' target='_BLANK')= self.label.film.addShortlist
                    a.btn.btn_secondary.isshortlisted(id=self.id+'_is_shortlisted', style= {display: 'none'} onclick=`removeFilm(${self.id})` role='button' target='_BLANK')= self.label.film.removeShortlist

            section.f_dir_box

                each director in film.directors
                    //- f_dir_box on nyyd container directorite boxidele
                    //- Iga Directori kohta nyyd täita see f_dir_bio_box.
                    .f_dir_bio_box
                        if director
                            .dir_img
                                if director.portrait
                                    img.img_dir(src=director.portrait alt=director.name)
                                    if director.name
                                        .str_info_grid_3
                                            .str_info_label.text_left.dark_semi= self.label.film.director
                                            .str_info_value.text_right.dark_1= director.name

                            .dir_bio.dark_1
                                if director.biography && typeof director.biography !== 'object'
                                    p.dark_1= director.biography
                                if director.filmography && typeof director.filmography !== 'object'
                                    p.dark_1= director.filmography

            if film.presentedBy
                - var presentedBy = [film.presentedBy]
            else if self.tags && self.tags.programmes && self.tags.programmes.map(a => a.presentedBy || false).length
                -
                    var presenters = self.tags.programmes.map((a) => {
                        if (a.presentedBy) {
                            delete a.presentedBy.id
                            return a.presentedBy
                        } else {
                            return false
                        }
                    })
                    var presentedBy = [...new Map(presenters.map(item => [item['presentedByText'], item])).values()]
            else
                - var presentedBy = []


            if presentedBy.length
                section.f_extra_box

                    each onePresentedBy in presentedBy
                        if onePresentedBy.organisations && onePresentedBy.organisations.length

                            if onePresentedBy.presentedByText && typeof onePresentedBy.presentedByText !== 'object'
                                p.dark_1.text_center= onePresentedBy.presentedByText

                            each presenter in onePresentedBy.organisations


                                //- Artikli kontroll algus, vajab veel artikli kättesaamist ja täiendamist, et olemasolul suunata artiklile!
                                if presenter.poffi_article
                                    - var articleFromYAML = self.data.articles.filter( (a) => { return presenter.poffi_article.id === a.id })
                                    - var article = articleFromYAML[0]
                                    if article.article_types && article.article_types[0]

                                        if article.publish && article.title && article.title.length > 1
                                            - var currentTime = new Date()
                                            if typeof(article.publishFrom) === 'undefined'
                                                - var publishFrom= new Date(article.created_at)
                                            else
                                                - var publishFrom= new Date(article.publishFrom)

                                            if article.publishUntil
                                                - var publishUntil = new Date(article.publishUntil)

                                            if (currentTime > publishFrom)

                                                if (!publishUntil || (publishUntil && (publishUntil > currentTime)))

                                                    //- p= `${article.title} - ${article.publish} - ${article.publishFrom} - ${article.publishUntil} - ${heroPlusTrioNews} - ${article.id} - ${article.article_types[0].name} - (${publishUntil} > ${currentTime}) - (${(!publishUntil || (publishUntil && (publishUntil > currentTime)))})`
                                                    - articlePublished = true
                                                    - articleSlug = article.slug
                                                    each artType in article.article_types
                                                        - artTypes.push(artType.name.toLowerCase())
                                                        if artType.name.toLowerCase() === defaultTypeIfExists[0]
                                                            - artTypeForPath = artType.slug.toLowerCase()
                                                            - break
                                                        else
                                                            - artTypeForPath = artType.slug.toLowerCase()
                                //- Artikli kontroll lõpp

                                //- Programmi esitleja nimi

                                if presenter.name
                                    p.dark_1.text_center= presenter.name

                                //- KUI ARTIKKEL KEELES OLEMAS JA PUBLISHED JA PEALKIRJAGA JNE
                                if typeof articlePublished !== 'undefined' && articlePublished === true
                                    .presenter_logo_item_container
                                        a(href= `/${lang_path}${artTypeForPath}/${articleSlug}`).presenter_logo_item
                                            if presenter.logoColour
                                                img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                            else if presenter.logoBlack
                                                img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                            else if presenter.logoWhite
                                                img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                                //- KUI ARTIKLIT POLE VÕI POLE SEE PUBLISHED, AGA ON CUSTOM URL
                                else if presenter.homepageUrl
                                    .presenter_logo_item_container
                                        a(href= presenter.homepageUrl).presenter_logo_item
                                            if presenter.logoColour
                                                img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                            else if presenter.logoBlack
                                                img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                            else if presenter.logoWhite
                                                img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)
                                //- LOGO ILMA LINGITA
                                else
                                    if presenter.logoColour
                                        .presenter_logo_item_container
                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`  src=`https://assets.poff.ee/img/${presenter.logoColour.hash}${presenter.logoColour.ext}`)
                                    else if presenter.logoBlack
                                        .presenter_logo_item_container
                                            img.presenter_logo_item(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`  src=`https://assets.poff.ee/img/${presenter.logoBlack.hash}${presenter.logoBlack.ext}`)
                                    else if presenter.logoWhite
                                        .presenter_logo_item_container
                                            img.presenter_logo_itemx(alt=presenter.name data-src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`  src=`https://assets.poff.ee/img/${presenter.logoWhite.hash}${presenter.logoWhite.ext}`)

            section.f_screenings_box
                div
                    h1.section_headline= self.label.film.screenings

                .card-deck.m-o.p-0
                    if self.screenings
                        each screening in self.screenings
                            .card.card_screening.rounded-0.border-0
                                .card-header.rounded-0.bg_dark_4
                                    .grid_container_screening_time
                                        div
                                            svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                rect(x='3' y='4' width='18' height='18' rx='2' ry='2')
                                                line(x1='16' y1='2' x2='16' y2='6')
                                                line(x1='8' y1='2' x2='8' y2='6')
                                                line(x1='3' y1='10' x2='21' y2='10')
                                            span.screening_date
                                                if screening.datetime
                                                    +screeningDate(screening.datetime)

                                        .text-right
                                            svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                                circle(cx='12' cy='12' r='10')
                                                polyline(points='12 6 12 12 16 14')
                                            span.screening_time= screening.time
                                                //- +screeningTime(screening.dateTime)

                                    .container_screening_location
                                        svg.svg_icon(viewBox='0 0 24 24' width='24' height='24' stroke='white' stroke-width='1' fill='none' stroke-linecap='round' stroke-linejoin='round')
                                            path(d='M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z')
                                            circle(cx='12' cy='10' r='3')

                                        if screening.location
                                            if screening.location.hall_name
                                                span.screening_hall= screening.location.hall_name
                                                if screening.location.cinema_name && screening.location.cinema_name
                                                    span.screening_venue= ` ${screening.location.cinema_name}`
                                                    if screening.location.town_name && screening.location.town_name
                                                        span.city= ` ${screening.location.town_name}`


                                .card-body.bg_dark_3
                                    .screening_info_blokk
                                        .str_info_grid_3
                                            span.screening_info_label= self.label.screening.name
                                            span.screening_info_value= screening.codeAndTitle
                                        //- if screening.screeningSubtitles

                                        if screening.subtitles
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.subtitles
                                                span.screening_info_value= screening.subtitles.join(', ')


                                        - var iqnac = screening.introQaConversation
                                        //- Screening Intro
                                        if iqnac && iqnac.filter(i => { return i.type === 'Intro' && i.guest }).length > 0 && typeof iqnac.filter(i => { return i.type === 'Intro' && i.guest })[0].guest[0] !== 'object'
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.introGuests
                                                span.screening_info_value= iqnac.filter(a => a.type === 'Intro')[0].guest.join(', ')
                                        if iqnac && iqnac.filter(i => { return i.type === 'Intro' && i.presenter }).length > 0 && typeof iqnac.filter(i => { return i.type === 'Intro' && i.presenter })[0].presented[0] !== 'object'
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.introPresenters
                                                span.screening_info_value= iqnac.filter(a => a.type === 'Intro')[0].presenter.join(', ')
                                        //- Screening QandA
                                        if iqnac && iqnac.filter(i => { return i.type === 'QandA' && i.guest }).length > 0 && typeof iqnac.filter(i => { return i.type === 'QandA' && i.guest })[0].guest[0] !== 'object'
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.qaGuests
                                                span.screening_info_value= iqnac.filter(a => a.type === 'QandA')[0].guest.join(', ')
                                        if iqnac && iqnac.filter(i => { return i.type === 'QandA' && i.presenter }).length > 0 && typeof iqnac.filter(i => { return i.type === 'QandA' && i.presenter })[0].presenter[0] !== 'object'
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.introPresenters
                                                span.screening_info_value= iqnac.filter(a => a.type === 'QandA')[0].presenter.join(', ')

                                        if iqnac && iqnac[0].duration
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.qaDuration
                                                span.screening_info_value
                                                    +dur(iqnac[0].duration)

                                        if screening.extraInfo && typeof screening.extraInfo !== 'object'
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.extraInfo
                                                span.screening_info_value= screening.extraInfo

                                        if screening.duration
                                            .str_info_grid_3
                                                span.screening_info_label= self.label.screening.totalDuration
                                                span.screening_info_value
                                                    +dur(screening.duration)

                                .btn-group(role='group' aria-label='')


                                    if screening.booking_url
                                        a.btn.btn_secondary.active(href=screening.booking_url, role='button', target='_blank')= self.label.button.screeningReservation
                                    if screening.ticketing_url
                                        a.btn.btn_primary.active(href=screening.ticketing_url, role='button', target='_blank')= self.label.button.screeningBuyTicket

            .f_vialog_box
                a(name='chat')
                    iframe(width='100%' height='540' src=`https://my.vialog.app/poff.ee/${film.id}` frameborder='0' allow='microphone; camera')

            if film.media && film.media.trailer && film.media.trailer[0] && film.media.trailer[0].videoCode
                section#trailer.f_trailer_box
                    .section_headline= self.label.film.trailer
                    each trailer in film.media.trailer
                        .embed-responsive.embed-responsive-16by9.m-0.p-0
                            if trailer.videoCode
                                +video(trailer.videoCode)

            //- section.f_imgs_box

            +tabname(self.title)
