
mixin chat(room_name, is_moderated=false)

    - var room_suffix = ''
    if is_moderated
        pre mod
        - room_suffix = '-moderated'
    else
        pre not mod

    div(id='chat-container-' + room_name + room_suffix class='chat-container' class='dark_1')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js')
        div(id='chat-message-template-' + room_name + room_suffix class='chat-message' style='display:none')
        div(id='chat-main-' + room_name + room_suffix class='chat-main')
            div(id='chat-sidebar-' + room_name + room_suffix  class='chat-sidebar')
                h2(id='chat-room-name-'+ room_name + room_suffix)
                ul(id='chat-user-list-'+ room_name + room_suffix)
            div(id='chat-messages-'+ room_name + room_suffix class='chat-messages' class='dark_1')

        div(id='chat-form-container-'+ room_name + room_suffix class='chat-form-container')
            form(id='chat-form-' + room_name + room_suffix)
                input(id='chat-message-input-' + room_name + room_suffix class='chat-message-input' type='text' placeholder='Enter Message' required='' autocomplete='off')
                button.btn
                    i.chat-message-button
                    | Send


    style.
        .chat-container{
            padding: 30px;
            background: lightblue;
        }

    script(src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js")
    script.


        document.addEventListener('userProfileLoaded', function (e) {
            main(userProfile, '#{room_name}', #{is_moderated})
        })

        function main(userProfile, room_name, is_moderated) {

            let room_suffix = ''
            if (is_moderated) {
                room_suffix = '-moderated'
            }

            const CHAT_SERVER = 'http://192.241.148.13'
            const socket = io(CHAT_SERVER)

            const chatFormElement = document.getElementById(['chat-form', room_name + room_suffix].join('-'))
            const chatMessagesElement = document.getElementById(['chat-messages', room_name + room_suffix].join('-'))
            const roomNameElement = document.getElementById(['chat-room-name', room_name + room_suffix].join('-'))
            const userListElement = document.getElementById(['chat-user-list', room_name + room_suffix].join('-'))
            const messageInputElement = document.getElementById(['chat-message-input', room_name + room_suffix].join('-'))
            const messageTemplateElement = document.getElementById(['chat-message-template', room_name + room_suffix].join('-'))
            let lastMessage

            console.log(roomNameElement)
            console.log(userListElement)
            roomNameElement.innerText = room_name

            let now = function (){
                let now = new Date()
                return `${now.getHours()}:${now.getMinutes()}:${now.getSeconds()}`
            }

            socket.on('ping', () =>{
                console.log(now(), "=>PING", socket.id)
                socket.emit('pong', {})
            })

            //- socket.on('pong', () =>{
            //-     console.log(now(), "=>PONG", socket.id)
            //- })


            // Join chatroom
            socket.emit('joinRoom', {
                user_id: userProfile.sub,
                user_name: userProfile.name,
                room_name: room_name,
                is_moderated: is_moderated,
                userProfile: userProfile
            })

            socket.on('roomUsers', (users) => {
                setUserList(users.users)
            })
            // Add users to DOM
            function setUserList(users) {
                userListElement.innerHTML = ''
                users.forEach(user => {
                    const li = document.createElement('li')
                    li.innerText = user
                    userListElement.appendChild(li)
                })
            }
            socket.on('messageToClient', (message) => {
                console.log({M: 'Got message', message, is_moderated})

                if (!is_moderated){
                    let myMessages = document.getElementById((['chat-messages', room_name + room_suffix].join('-'))).childNodes
                    console.log(myMessages)
                    outputMessage(message)
                    // Scroll down
                    chatMessagesElement.scrollTop = chatMessagesElement.scrollHeight
                }

                if(is_moderated && message.is_moderated){
                     outputMessage(message)
                    // Scroll down
                    chatMessagesElement.scrollTop = chatMessagesElement.scrollHeight
                }

                //- if(message.is_moderated === is_moderated){
                //-     outputMessage(message)
                //-     // Scroll down
                //-     chatMessagesElement.scrollTop = chatMessagesElement.scrollHeight
                //- }
            })

            // Message submit
            chatFormElement.addEventListener('submit', e => {
                e.preventDefault()

                // Get message text
                let message_text = messageInputElement.value.trim()
                if (!message_text) {
                    return false
                }
                lastMessage = message_text

                // Emit message to server
                console.log('Send message', message_text)
                socket.emit('messageToServer', {
                    user_id: userProfile.sub,
                    room_name: room_name,
                    message: message_text
                })

                // Clear input
                messageInputElement.value = ''
                messageInputElement.focus()
            })


            // Output message to DOM
            function outputMessage(message) {

                var messageElement = messageTemplateElement.cloneNode(true)
                messageElement.id = message.id+message
                messageElement.style.display = 'block'
                const messageMetaElement = document.createElement('div')
                messageMetaElement.innerText = message.user_name + ' ' + message.time
                const messageTextElement = document.createElement('span')
                messageTextElement.innerText = message.text

                chatMessagesElement.appendChild(messageElement)
                messageElement.appendChild(messageMetaElement)
                messageMetaElement.appendChild(messageTextElement)
                if(!is_moderated){
                    const moderateButtonElement = document.createElement('button')
                    moderateButtonElement.innerText = "send to moderated"
                    moderateButtonElement.onclick = function() {moderateMessage(message.id)}
                    messageMetaElement.appendChild(moderateButtonElement)
                }

            }

            function moderateMessage(id){
                console.log("modereeri messsage id-ga: ", id)
                socket.emit('moderate', id)
            }


            //REJOIN
            socket.on('Rejoin, please', () => {
                socket.emit('joinRoom', {
                    user_id: userProfile.sub,
                    user_name: userProfile.name,
                    room_name: room_name,
                    is_moderated: is_moderated,
                    userProfile: userProfile
                })

                socket.emit('messageToServer', {
                    user_id: userProfile.sub,
                    room_name: room_name,
                    message: lastMessage
                })
                console.log(lastMessage)
            })


        }
