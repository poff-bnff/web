extends /_templates/layout.pug
include /_templates/mixins.pug



block content

    .chat-container
        header.chat-header
            h1
            i.fas.fa-smile
            |  Chat
            a.btn(href='index.html') Leave Room
        main.chat-main
            .chat-sidebar
            h3
                i.fas.fa-comments
                |  Room Name:
            h2#room-name
            h3
                i.fas.fa-users
                |  Users
            ul#users
            .chat-messages
    .chat-form-container
        form#chat-form
        input#msg(type='text' placeholder='Enter Message' required='' autocomplete='off')
        button.btn
            i.fas.fa-paper-plane
            |  Send

    style.
        :root {
            --dark-color-a: #0d1e8e;
            --dark-color-b: #394fdc;
            --light-color: #e6e9ff;
            --success-color: #5cb85c;
            --error-color: #d9534f;
        }
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: Verdana, sans-serif;
            font-size: 16px;
            background: var(--light-color);
            margin: 20px;
        }

        ul {
            list-style: none;
        }

        a {
            text-decoration: none;
        }

        .btn {
            cursor: pointer;
            padding: 5px 15px;
            background: var(--light-color);
            color: var(--dark-color-a);
            border: 0;
            font-size: 17px;
        }

        /* Chat Page */

        .chat-container {
            max-width: 1100px;
            background: #fff;
            margin: 30px auto;
            overflow: hidden;
        }

        .chat-header {
            background: var(--dark-color-a);
            color: #fff;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
            padding: 15px;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .chat-main {
            display: grid;
            grid-template-columns: 1fr 3fr;
        }

        .chat-sidebar {
            background: var(--dark-color-b);
            color: #fff;
            padding: 20px 20px 60px;
            overflow-y: scroll;
        }

        .chat-sidebar h2 {
            font-size: 20px;
            background: rgba(0, 0, 0, 0.1);
            padding: 10px;
            margin-bottom: 20px;
        }

        .chat-sidebar h3 {
            margin-bottom: 15px;
        }

        .chat-sidebar ul li {
            padding: 10px 0;
        }

        .chat-messages {
            padding: 30px;
            max-height: 500px;
            overflow-y: scroll;
        }

        .chat-messages .message {
            padding: 10px;
            margin-bottom: 15px;
            background-color: var(--light-color);
            border-radius: 5px;
            overflow-wrap: break-word;
        }

        .chat-messages .message .meta {
            font-size: 15px;
            font-weight: bold;
            color: var(--dark-color-b);
            opacity: 0.7;
            margin-bottom: 7px;
        }

        .chat-messages .message .meta span {
            color: #777;
        }

        .chat-form-container {
            padding: 20px 30px;
            background-color: var(--dark-color-a);
        }

        .chat-form-container form {
            display: flex;
        }

        .chat-form-container input[type='text'] {
            font-size: 16px;
            padding: 5px;
            height: 40px;
            flex: 1;
        }

        /* Join Page */
        .join-container {
            max-width: 500px;
            margin: 80px auto;
            color: #fff;
        }

        .join-header {
            text-align: center;
            padding: 20px;
            background: var(--dark-color-a);
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
        }

        .join-main {
            padding: 30px 40px;
            background: var(--dark-color-b);
        }

        .join-main p {
            margin-bottom: 20px;
        }

        .join-main .form-control {
            margin-bottom: 20px;
        }

        .join-main label {
            display: block;
            margin-bottom: 5px;
        }

        .join-main input[type='text'] {
            font-size: 16px;
            padding: 5px;
            height: 40px;
            width: 100%;
        }

        .join-main select {
            font-size: 16px;
            padding: 5px;
            height: 40px;
            width: 100%;
        }

        .join-main .btn {
            margin-top: 20px;
            width: 100%;
        }

        @media (max-width: 700px) {
            .chat-main {
                display: block;
            }

            .chat-sidebar {
                display: none;
            }
        }

    script(src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.js")
    script.
        //client side
        const chatForm = document.getElementById('chat-form');
        const chatMessages = document.querySelector('.chat-messages');
        const roomName = document.getElementById('room-name');
        const userList = document.getElementById('users');


        // Get username and room from URL
        const { username, room } = {username: 'Saale', room: 'jututuba'}

        socket = io('http://192.241.148.13'); // In case your front is not served from the same domain as your server, you have to pass the URL of your server.

        // Join chatroom
        socket.emit('joinRoom', { username, room });

        // Get room and users
        socket.on('roomUsers', ({ room, users }) => {
        outputRoomName(room);
        outputUsers(users);
        });

        // Message from server
        socket.on('message', message => {
        console.log(message);
        outputMessage(message);

        // Scroll down
        chatMessages.scrollTop = chatMessages.scrollHeight;
        });

        // Message submit
        chatForm.addEventListener('submit', e => {
        e.preventDefault();

        // Get message text
        let msg = e.target.elements.msg.value;
        msg = msg.trim();

        if (!msg){
            return false;
        }

        // Emit message to server
        socket.emit('chatMessage', msg);

        // Clear input
        e.target.elements.msg.value = '';
        e.target.elements.msg.focus();
        });

        // Output message to DOM
        function outputMessage(message) {
        const div = document.createElement('div');
        div.classList.add('message');
        const p = document.createElement('p');
        p.classList.add('meta');
        p.innerText = message.username;
        p.innerHTML += `<span>${message.time}</span>`;
        div.appendChild(p);
        const para = document.createElement('p');
        para.classList.add('text');
        para.innerText = message.text;
        div.appendChild(para);
        document.querySelector('.chat-messages').appendChild(div);
        }

        // Add room name to DOM
        function outputRoomName(room) {
        roomName.innerText = room;
        }

        // Add users to DOM
        function outputUsers(users) {
        userList.innerHTML = '';
        users.forEach(user=>{
            const li = document.createElement('li');
            li.innerText = user.username;
            userList.appendChild(li);
        });
        }

