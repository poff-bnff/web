extends /_templates/layout.pug
include /_templates/mixins.pug

block content


    br
    br
    br
    br
    br
    br
    br
    br
    h3#loading.sub_section_headline(style='display: grid;') LOADING
    content#content(style='display: none;')
        //- Milliseid screening type kuvada, kõikide kuvamiseks []
        //- Ühe, nt first screening kuvamiseks:
        //- - const whichScreeningTypesToDisplay = ['first screening']
        //- Mitme kuvamiseks:
        - const whichScreeningTypesToDisplay = ['first screening', 'regular', 'online kino']
        //- - const whichScreeningTypesToDisplay = []

        input#search(type='text', placeholder='Search something now!!!')

        select#programmes_select(name='Programmes')
            option(value='') PROGRAMMID:
            each index, key in self.data.filters.programmes
                option(value=key)= index

        select#languages_select(name='Languages')
            option(value='') KEEL:
            each index, key in self.data.filters.languages
                option(value=key)= index

        select#countries_select(name='Countries')
            option(value='') RIIK:
            each index, key in self.data.filters.countries
                option(value=key)= index

        select#subtitles_select(name='Subtitles')
            option(value='') SUBTIITRID:
            each index, key in self.data.filters.subtitles
                option(value=key)= index

        select#premieretypes_select(name='Premieretypes')
            option(value='') ESILINASTUSED:
            each index, key in self.data.filters.premieretypes
                option(value=key)= index

        select#towns_select(name='Towns')
            option(value='') LINNAD:
            each index, key in self.data.filters.towns
                option(value=key)= index

        select#cinemas_select(name='Cinemas')
            option(value='') KINOD:
            each index, key in self.data.filters.cinemas
                option(value=key)= index

        button(onclick='select_next_or_previous(`-`, `dates_select`)')= `<`
        select#dates_select(name='Dates')
            option(value='') KUUPÄEVAD:
            each index, key in self.data.filters.dates
                option(value=key)= index
        button(onclick='select_next_or_previous(`+`, `dates_select`)')= `>`

        button(onclick='select_next_or_previous(`-`, `times_select`)')= `<`
        select#times_select(name='Times')
            option(value='') AJAD:
            each index, key in self.data.filters.times
                option(value=key)= index
        button(onclick='select_next_or_previous(`+`, `times_select`)')= `>`

        button(onclick='unselect_all()') X

        h3#nonetoshow.sub_section_headline(style='display: none;') POLE VALIKULE VASTAVAT KUVADA

        if self.data.screenings
            main.grid_films
                -
                    var sortFunction = function(a, b) {
                        if (a.dateTime) {
                            var aSortSource = a.dateTime
                        }
                        if (b.dateTime) {
                            var bSortSource = b.dateTime
                        }
                        return (aSortSource > bSortSource) ? 1 : ((bSortSource > aSortSource) ? -1 : 0)
                    }

                each screening in self.data.screenings.sort(sortFunction)
                    -
                        var screeningNames = function(item) {
                            let itemNames = item.name
                            return itemNames
                        }
                    if ( screening.screening_types && screening.screening_types.map(screeningNames).some(ai => whichScreeningTypesToDisplay.includes(ai.toLowerCase())) ) || whichScreeningTypesToDisplay.length === 0

                        - var allFestivalEditions = []
                        if screening.cassette
                            - var cassette = screening.cassette
                        if cassette.festival_editions
                            each edition in cassette.festival_editions
                                - allFestivalEditions.push(edition.name)
                        a.card_film(id= screening.id href= `/${lang_path}film/${cassette.slug}`)
                            .container_frame_16_9

                                //- PILDID
                                if cassette.films && cassette.films.length > 1
                                    if screening.cassetteCarouselPicsCassetteThumbs && screening.cassetteCarouselPicsCassetteThumbs[0]
                                        img.container_contents_16_9(src= screening.cassetteCarouselPicsCassetteThumbs[0] alt= cassette.title)
                                    else if screening.cassetteCarouselPicsFilmsThumbs && screening.cassetteCarouselPicsFilmsThumbs[0]
                                        img.container_contents_16_9(src= screening.cassetteCarouselPicsFilmsThumbs[0] alt= cassette.title)
                                    else
                                        img.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt= cassette.title)
                                else if cassette.films && cassette.films.length === 1 && screening.cassetteCarouselPicsFilmsThumbs
                                    img.container_contents_16_9(src= screening.cassetteCarouselPicsFilmsThumbs[0] alt= cassette.title)
                                else
                                    img.container_contents_16_9(src='/assets/img/static/placeholder_hd_1.jpg' alt= cassette.title)
                            .card_film_title

                                //- Eeldame, et screeningul on datetime
                                if screening.dateTime

                                    //- h3.film_title_locale.dark_1= `${screening.id} - ${screening.dateTime}`

                                    //- Kuvame kassetipealkirja
                                    h3.film_title_locale.dark_1= cassette.title
                                        p(id= cassette.id+'nupp' style={color: 'red', display:'none'})

                                    //- Kuvame screeningtypes
                                    if screening.screening_types
                                        span= screening.screening_types.map(screeningNames).join(', ')
                                        br
                                    //- Aeg
                                    span
                                        +screeningDate(screening.dateTime)
                                    span
                                        +screeningTime(screening.dateTime)
                                    br

                                    //- Koht
                                    if screening.location && screening.location.hall && screening.location.hall.name
                                        if screening.location.hall && screening.location.hall.name
                                            span.film_title_locale.dark_1= screening.location.hall.name
                                            if screening.location.hall.cinema && screening.location.hall.cinema.name
                                                span.film_title_locale.dark_1= ` ${screening.location.hall.cinema.name}`
                                                if screening.location.hall.cinema.town && screening.location.hall.cinema.town.name && screening.location.hall.cinema.town.country && screening.location.hall.cinema.town.country.name
                                                    span.film_title_locale.dark_1= ` ${screening.location.hall.cinema.town.name}, ${screening.location.hall.cinema.town.country.name}`

                                    //- Kui ühefilmikassett
                                    if screening.cassette && screening.cassette.films && screening.cassette.films.length === 1
                                        - var film = screening.cassette.films[0]
                                        if screening.cassette.films[0].tags
                                            - var tags = screening.cassette.films[0].tags
                                            if tags.keywords && tags.keywords[0]
                                                //- Kuvame filmi tag keyworde
                                                .str_info_meta_label.dark_1= self.label.film.genre
                                                .str_info_meta_festival.dark_1= tags.keywords.join(', ')

                                        //- Riigid algus
                                        if film.orderedCountries
                                            -
                                                var countriesNames = function(item) {
                                                    if(item.country && item.country.name) {
                                                        var itemNames = item.country.name
                                                        return itemNames
                                                    }
                                                }

                                            //- Riigid
                                            .str_info_grid_3
                                                - var sortCountries = film.orderedCountries.sort(function(a, b){ return (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0); })
                                                .str_info_label.dark_semi= self.label.film.countries
                                                - var mapCountries = sortCountries.map(countriesNames)
                                                .str_info_value.dark_1.thin_300= mapCountries.join(', ')

                                        //- Directorid
                                        if film && film.credentials && film.credentials.rolePersonsByRole
                                            if film.credentials.rolePersonsByRole.director && film.credentials.rolePersonsByRole.director[0]
                                                .str_info_grid_3
                                                    .str_info_label.dark_semi= self.label.film.director
                                                    .str_info_value.dark_1.thin_300= film.credentials.rolePersonsByRole.director.join(', ')

                            //- Programmid
                            .card_film_info
                                .str_info_grid_3
                                    if cassette.films && cassette.films.length
                                        - var filmsProgrammes = []
                                        each film in cassette.films
                                            if film.tags && film.tags.programmes && film.tags.programmes.length
                                                each programme in film.tags.programmes
                                                    if programme.name
                                                        - filmsProgrammes.push(programme.name)
                                        if filmsProgrammes.length
                                            - var uniqueProgrammes = [...new Set(filmsProgrammes)];
                                            .str_info_label.dark_semi= self.label.film.programme
                                            .str_info_value.dark_1.thin_300= uniqueProgrammes.join(', ')


                script.
                    var searcharray = !{JSON.stringify(self.data.search)}

                    var filters = !{JSON.stringify(self.data.filters)}
